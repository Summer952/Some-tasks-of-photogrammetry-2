function pts3d = FunTriangulate(P1, pts1, P2, pts2)
%% 函数解释：已知匹配的像面点和投影矩阵求解空间点的三维坐标
%P1 P2：投影矩阵 pts1 pts2：像面点坐标

%参数初始化
[row,~] = size(pts1);
pts3d = [];

for i=1:row
   
    x1 = pts1(i,1);y1 = pts1(i,2);x2 = pts2(i,1);y2 = pts2(i,2);
    %构造系数矩阵A
    A = [P1(1,1)-P1(3,1)*x1,P1(1,2)-P1(3,2)*x1,P1(1,3)-P1(3,3)*x1;
         P1(2,1)-P1(3,1)*y1,P1(2,2)-P1(3,2)*y1,P1(2,3)-P1(3,3)*y1;
         P2(1,1)-P2(3,1)*x2,P2(1,2)-P2(3,2)*x2,P2(1,3)-P2(3,3)*x2;
         P2(2,1)-P2(3,1)*y2,P2(2,2)-P2(3,2)*y2,P2(2,3)-P2(3,3)*y2];
     %构造结果矩阵V
     V = [P1(3,4)*x1-P1(1,4);
          P1(3,4)*y1-P1(2,4);
          P2(3,4)*x2-P2(1,4);
          P2(3,4)*y2-P2(2,4)];
     %空间点三维坐标的最小二乘解 
    temp_pts3d = inv(A.'*A)*A.'*V;
    pts3d = [pts3d;temp_pts3d.'];
end
end